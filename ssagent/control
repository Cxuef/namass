#!/bin/bash

WORKSPACE=$(cd $(dirname $0)/; pwd)
cd $WORKSPACE

mkdir -p var

app=ssagent
conf=cfg.json
pidfile=var/app.pid
logfile=var/app.log
sockfile=/tmp/ssagent.sock

function check_pid() {
    if [ -f $pidfile ];then
        pid=`cat $pidfile`
        if [ -n $pid ]; then
            running=`ps -p $pid|grep -v "PID TTY" |wc -l`
            return $running
        fi
    fi
    return 0
}

function start() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo -n "$app now is running already, pid="
        cat $pidfile
        return 1
    fi

    if ! [ -f $conf ];then
        # echo "Config file $conf doesn't exist, creating one."
        # cp cfg.example.json $conf
        echo "Config file $conf doesn't exist."
        return 1
    fi
    rm $sockfile
    nohup ./$app -c $conf >> $logfile 2>&1 &
    echo $! > $pidfile
    echo "$app started..., pid=$!"
}

function stop() {
    pid=`cat $pidfile`
    kill $pid
    rm $sockfile
    echo "$app stoped..."
}

function reload() {
    pid=`cat $pidfile`
    kill -USR2 $pid
    echo "$app reloaded..."
}

function restart() {
    stop
    sleep 1
    start
}

function status() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo started
    else
        echo stoped
    fi
}

function tailf() {
    tail -f $logfile
}

function build() {
    go build
    if [ $? -ne 0 ]; then
        exit $?
    fi
}

function pack() {
    build
    file_list="control VERSION cfg.example.json $app"
    echo "...tar $app.tar.gz <= $file_list"
    if [ -e $app.tar.gz ]; then
        rm $app.tar.gz
    fi
    tar zcf $app.tar.gz $file_list
}

# function packbin() {
#     build
#     git log -1 --pretty=%h > gitversion
#     version=`./$app -v`
#     tar zcvf $app-bin-$version.tar.gz $app gitversion
# }

function help() {
    echo "$0 build|start|stop|reload|restart|status|tail"
}

if [ "$1" == "" ]; then
    help
elif [ "$1" == "stop" ];then
    stop
elif [ "$1" == "start" ];then
    start
elif [ "$1" == "reload" ];then
    reload
elif [ "$1" == "restart" ];then
    restart
elif [ "$1" == "status" ];then
    status
elif [ "$1" == "tail" ];then
    tailf
elif [ "$1" == "build" ];then
    build
elif [ "$1" == "pack" ];then
    pack
else
    help
fi
